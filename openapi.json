{"openapi": "3.1.0", "info": {"title": "Road Defects Detection API", "description": "Obtain object value out of image\n                    and return image and json result", "version": "2023.1.31"}, "paths": {"/healthcheck": {"get": {"summary": "Perform Healthcheck", "description": "It basically sends a GET request to the route & hopes to get a \"200\"\nresponse code. Failing to return a 200 response code just enables\nthe GitHub Actions to rollback to the last version the project was\nfound in a \"working condition\". It acts as a last line of defense in\ncase something goes south.\nAdditionally, it also returns a JSON response in the form of:\n{\n    'healtcheck': 'Everything OK!'\n}", "operationId": "perform_healthcheck_healthcheck_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/img_object_detection_to_json": {"post": {"summary": "Img Object Detection To Json", "description": "Object Detection from an image.\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    dict: JSON format containing the Objects Detections.", "operationId": "img_object_detection_to_json_img_object_detection_to_json_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_json_img_object_detection_to_json_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/img_object_detection_to_img": {"post": {"summary": "Img Object Detection To Img", "description": "Object Detection from an image plot bbox on image\n\nArgs:\n    file (bytes): The image file in bytes format.\nReturns:\n    Image: Image in bytes with bbox annotations.", "operationId": "img_object_detection_to_img_img_object_detection_to_img_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_img_object_detection_to_img_img_object_detection_to_img_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_img_object_detection_to_img_img_object_detection_to_img_post": {"properties": {"file": {"type": "string", "format": "binary", "title": "File"}}, "type": "object", "required": ["file"], "title": "Body_img_object_detection_to_img_img_object_detection_to_img_post"}, "Body_img_object_detection_to_json_img_object_detection_to_json_post": {"properties": {"file": {"type": "string", "format": "binary", "title": "File"}}, "type": "object", "required": ["file"], "title": "Body_img_object_detection_to_json_img_object_detection_to_json_post"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}